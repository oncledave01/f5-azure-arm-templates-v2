{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.4.0.0",
  "parameters": {
		"LabNumber": {
			"type": "string",
			"defaultValue": "01",
			"allowedValues": [
				"01",
				"02",
				"03",
				"04",
				"05",
				"06",
				"07",
				"08",
				"09",
				"10",
				"11",
				"12",
				"13",
				"14",
				"15",
				"16",
				"17",
				"18",
				"19"
			],
			"metadata": {
				"description": "Lab number"
			}
		},
    "templateBaseUrl": {
      "defaultValue": "https://raw.githubusercontent.com/oncledave01/f5-azure-arm-templates-v2/",
      "metadata": {
        "description": "The publicly accessible URL where the linked ARM templates are located. Must be raw!"
      },
      "type": "string"
    },
    "artifactLocation": {
      "defaultValue": "main/examples/",
      "metadata": {
        "description": "The directory, relative to the templateBaseUrl, where the modules folder is located."
      },
      "type": "string"
    },
    "uniqueString": {
      "defaultValue": "rds",
      "metadata": {
        "description": "REQUIRED - A prefix that will be used to name template resources. Because some resources require globally unique names, we recommend using a unique value."
      },
      "type": "string"
    },
    "bigIpInstanceType": {
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "Enter valid instance type."
      },
      "type": "string"
    },
    "sshKey": {
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC5TSdgJ1hPsy9pnxFkwWp4ZDSFE0CuzzfyLUCHBFv61GeMXzNDCixn9U4HGxyTMOMnJETxKt4NTElZ82XNXFroFWJp7enrAVyRkgCa4BPilvQ++cqkMjmujXRo89va+SnQpuzC3Eb4n7FTv9lbEjqTlO6H+mouovfSJ4UEAJkOjhbjLzFPbwJjwvoJ3BJxljJwyGfDuhycWCojN9zF5zv7Hhp3sWLtrc1NU1N3w+i+CYHYOi7mkZmQRhh7zE9uS23U/yLttkfEnZtsml/6k/SG/qGX8rqLnVtOjCkGrghKf0XAQ+fENwBho5U8wUdzZ2DIcPTBmXPjMZoLhm2J2qC/HEDQIHlAbaHqzc+0GkSFD2KyJOIOrjbVErkGO1+A3NZnN9/C3RlAnpM+a2HxmIxNZ+U+Yf2R4somQGdtpDxfFEyjkwlCD50RF4IOzKaWgzL9eU13/T117xZD1j2kIPBxRSug+ipKRjDJuGiLsoNlepZtIv1UEFABbMaUovj/9Z8= admin@MBP-Dave.rd-services.eu",
      "metadata": {
        "description": "REQUIRED - Supply the public key that will be used for SSH authentication to the BIG-IP and application virtual machines."
      },
      "type": "string"
    },
    "numNics": {
      "allowedValues": [
        1,
        2,
        3
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "Enter valid number of network interfaces to create on the BIG-IP VE instance."
      },
      "type": "int"
    },
    "provisionPublicIp": {
      "defaultValue": true,
      "metadata": {
        "description": "Select true if you would like to provision a public IP address for accessing the BIG-IP instance(s)."
      },
      "type": "bool"
    },
    "restrictedSrcAddressMgmt": {
      "defaultValue": "*",
      "metadata": {
        "description": "REQUIRED - When creating management security group, this field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources."
      },
      "type": "string"
    },
    "restrictedSrcAddressApp": {
      "defaultValue": "*",
      "metadata": {
        "description": "REQUIRED - When creating application security group, this field restricts application access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources."
      },
      "type": "string"
    },
    "useAvailabilityZones": {
      "defaultValue": false,
      "metadata": {
        "description": "This deployment can deploy resources into Azure Availability Zones (if the region supports it).  If that is not desired the input should be set false. If the region does not support availability zones the input should be set to false."
      },
      "type": "bool"
    },
    "tagValues": {
      "defaultValue": {
        "application": "APP",
        "cost": "COST",
        "environment": "ENV",
        "group": "GROUP",
        "owner": "OWNER"
      },
      "metadata": {
        "description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
      },
      "type": "object"
    }
  },
  "variables": {
    "contentVersion": "[deployment().properties.template.contentVersion]",
    "uniqueString": "[concat(toLower(parameters('uniqueString')), parameters('LabNumber'))]",
    "adminUsername": "[string('azureuser')]",
    "adminPassword": "[string('sports-lionize-DOCTRINE1')]",
    "numSubnets": "[if(variables('provisionApp'), add(parameters('numNics'), 1), parameters('numNics'))]",
    "vnetName": "[concat(variables('uniqueString'), '-vnet')]",
    "vnetAddressPrefix": "10.0",
    "createAutoscaleGroup": false,
    "externalLoadBalancerName": "None",
    "internalLoadBalancerName": "None",
    "internalLoadBalancerProbePort": "3456",
    "loadBalancerRulePorts": [],
    "mgmtNsgRulesArray": [
      {
        "destinationPortRanges": [
          "22",
          "[if(equals(parameters('numNics'), 1), '8443', '443')]"
        ],
        "sourceAddressPrefix": "[parameters('restrictedSrcAddressMgmt')]",
        "protocol": "Tcp"
      }
    ],
    "nsg1RulesArray": [
      {
        "destinationPortRanges": [
          "80",
          "443",
          "9443",
          "22"
        ],
        "sourceAddressPrefix": "[parameters('restrictedSrcAddressApp')]",
        "protocol": "Tcp"
      },
      {
        "destinationPortRanges": [
          "80",
          "443"
        ],
        "sourceAddressPrefix": "10.0.0.0/8",
        "protocol": "Tcp"
      }
    ],
    "nsg2RulesArray": [
      {
        "destinationPortRanges": [
          "80",
          "443"
        ],
        "sourceAddressPrefix": "[parameters('restrictedSrcAddressApp')]",
        "protocol": "Tcp"
      },
      {
        "destinationPortRanges": [
          "80",
          "443"
        ],
        "sourceAddressPrefix": "10.0.0.0/8",
        "protocol": "Tcp"
      }
    ],
    "nsg0": "[if(equals(parameters('numNics'), 1), union(variables('mgmtNsgRulesArray'), variables('nsg1RulesArray'), variables('nsg2RulesArray')), variables('mgmtNsgRulesArray'))]",
    "nsg1": "[if(greaterOrEquals(parameters('numNics'), 2), variables('nsg1RulesArray'), createArray())]",
    "nsg2": "[if(greaterOrEquals(parameters('numNics'), 3), variables('nsg2RulesArray'), createArray())]",
    "bastionInstanceName": "[variables('uniqueString')]",
    "bastionInstanceType": "Standard_D2s_v3",
    "provisionApp": true,
    "appInstanceName": "[variables('uniqueString')]",
    "appInstanceType": "Standard_D2s_v3",
    "cloudInitUrl": "",
    "mgmtSelfIp": "10.0.0.11",
    "nic1SelfIp": "10.0.1.11",
    "nic2SelfIp": "10.0.2.11",
    "nic1ServiceIPSubnetIndex": "[if(equals(parameters('numNics'), 1), '0', '1')]",
    "nic1ServiceIP1": "[concat('10.0.', variables('nic1ServiceIPSubnetIndex'), '.101')]",
    "vmName": "[concat(variables('uniqueString'), '-bigip-vm')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "networkTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/network/network.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "numSubnets": {
            "value": "[variables('numSubnets')]"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "vnetAddressPrefix": {
            "value": "[variables('vnetAddressPrefix')]"
          },
          "createNatGateway": {
            "value": "[not(parameters('provisionPublicIp'))]"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "dagTemplate",
      "dependsOn": [
        "networkTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/dag/dag.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "uniqueString": {
            "value": "[variables('uniqueString')]"
          },
          "externalLoadBalancerName": {
            "value": "[variables('externalLoadBalancerName')]"
          },
          "internalLoadBalancerName": {
            "value": "[variables('internalLoadBalancerName')]"
          },
          "internalLoadBalancerProbePort": {
            "value": "[variables('internalLoadBalancerProbePort')]"
          },
          "internalSubnetId": {
            "value": ""
          },
          "loadBalancerRulePorts": {
            "value": "[variables('loadBalancerRulePorts')]"
          },
          "nsg0": {
            "value": "[variables('nsg0')]"
          },
          "nsg1": {
            "value": "[variables('nsg1')]"
          },
          "nsg2": {
            "value": "[variables('nsg2')]"
          },
          "numberPublicExternalIpAddresses": {
            "value": 2
          },
          "numberPublicMgmtIpAddresses": {
            "value": 1
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "condition": "[variables('provisionApp')]",
      "apiVersion": "2021-04-01",
      "name": "appTemplate",
      "dependsOn": [
        "networkTemplate",
        "dagTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/ips/ips.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "adminUsername": {
            "value": "[variables('adminUsername')]"
          },
          "adminPassword": {
            "value": "[variables('adminPassword')]"
          },
          "sshKey": {
            "value": "[parameters('sshKey')]"
          },
          "createAutoscaleGroup": {
            "value": "[variables('createAutoscaleGroup')]"
          },
          "instanceName": {
            "value": "[variables('appInstanceName')]"
          },
          "instanceType": {
            "value": "[variables('appInstanceType')]"
          },
          "subnetId": {
            "value": "[reference('networkTemplate').outputs.subnets.value[parameters('numNics')]]"
          },
          "mgmtPublicIpId": {
            "value": "[if(parameters('provisionPublicIp'), reference('dagTemplate').outputs.mgmtIpIds.value[0], '')]"
          },
          "nsgId": {
            "value": "[if(equals(parameters('numNics'), 1), reference('dagTemplate').outputs.nsg0Id.value, reference('dagTemplate').outputs.nsg1Id.value)]"
          },
          "appContainerName": {
            "value": "SELKS"
          },
          "cloudInitUrl": {
            "value": "[variables('cloudInitUrl')]"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "virtualNetworkId": {
      "type": "string",
      "value": "[reference('networkTemplate').outputs.virtualNetwork.value]"
    },
    "IPSManagementPublicIp": {
      "type": "string",
      "value": "[reference('dagTemplate').outputs.mgmtIps.value[0]]"
    },
    "IPSManagementPrivateIp": {
      "type": "string",
      "value": "[variables('mgmtSelfIp')]"
    },
    "IPSManagementPublicUrl": {
      "condition": "[parameters('provisionPublicIp')]",
      "type": "string",
      "value": "[if(equals(parameters('numNics'), 1), concat('https://', reference('dagTemplate').outputs.mgmtIps.value[0], ':8443/'), concat('https://', reference('dagTemplate').outputs.mgmtIps.value[0], ':443/'))]"
    },
    "appUsername": {
      "condition": "[variables('provisionApp')]",
      "type": "string",
      "value": "[variables('adminUsername')]"
    }
  }
}
