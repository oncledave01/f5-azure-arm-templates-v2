{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.4.0.0",
  "parameters": {
    "LabNumber": {
      "type": "string",
      "defaultValue": "01",
      "allowedValues": [
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08",
        "09",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19"
      ],
      "metadata": {
        "description": "Lab number"
      }
    },
    "bigIpInstanceType": {
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "Enter valid instance type."
      },
      "type": "string"
    },
    "sshKey": {
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC5TSdgJ1hPsy9pnxFkwWp4ZDSFE0CuzzfyLUCHBFv61GeMXzNDCixn9U4HGxyTMOMnJETxKt4NTElZ82XNXFroFWJp7enrAVyRkgCa4BPilvQ++cqkMjmujXRo89va+SnQpuzC3Eb4n7FTv9lbEjqTlO6H+mouovfSJ4UEAJkOjhbjLzFPbwJjwvoJ3BJxljJwyGfDuhycWCojN9zF5zv7Hhp3sWLtrc1NU1N3w+i+CYHYOi7mkZmQRhh7zE9uS23U/yLttkfEnZtsml/6k/SG/qGX8rqLnVtOjCkGrghKf0XAQ+fENwBho5U8wUdzZ2DIcPTBmXPjMZoLhm2J2qC/HEDQIHlAbaHqzc+0GkSFD2KyJOIOrjbVErkGO1+A3NZnN9/C3RlAnpM+a2HxmIxNZ+U+Yf2R4somQGdtpDxfFEyjkwlCD50RF4IOzKaWgzL9eU13/T117xZD1j2kIPBxRSug+ipKRjDJuGiLsoNlepZtIv1UEFABbMaUovj/9Z8= admin@MBP-Dave.rd-services.eu",
      "metadata": {
        "description": "REQUIRED - Supply the public key that will be used for SSH authentication to virtual machines."
      },
      "type": "string"
    },
    "appContainerName": {
      "defaultValue": "karthequian/gruyere:latest",
      "metadata": {
        "description": "The docker container to use when deploying the example application."
      },
      "type": "string"
    },
    "provisionPublicIp": {
      "defaultValue": true,
      "metadata": {
        "description": "Select true if you would like to provision a public IP address for accessing the BIG-IP instance(s)."
      },
      "type": "bool"
    },
    "tagValues": {
      "defaultValue": {
        "application": "APP",
        "cost": "COST",
        "environment": "ENV",
        "group": "GROUP",
        "owner": "OWNER"
      },
      "metadata": {
        "description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
      },
      "type": "object"
    },
    "PaloRuntimeInitConfig": {
      "defaultValue": "",
      "metadata": {
        "description": "Supply a URL to the palo-runtime-init configuration file in YAML or JSON format, or an escaped JSON string to use for f5-bigip-runtime-init configuration."
      },
      "type": "string"
    },
    "PaloRuntimeInitPackageUrl": {
      "defaultValue": "",
      "metadata": {
        "description": "Supply a URL to the palo-runtime-init configuration file in YAML or JSON format, or an escaped JSON string to use for f5-bigip-runtime-init configuration."
      },
      "type": "string"
    }
  },
  "variables": {
    "numNics": "3";
    "useAvailabilityZones": false,
    "templateBaseUrl": "https://raw.githubusercontent.com/oncledave01/f5-azure-arm-templates-v2/",
    "artifactLocation": "main/examples/",
    "restrictedSrcAddressMgmt": "*",
    "restrictedSrcAddressApp": "*",
    "contentVersion": "[deployment().properties.template.contentVersion]",
    "uniqueString": "[concat('rds', parameters('LabNumber'))]",
    "adminUsername": "[string('azureuser')]",
    "adminPassword": "[string('sports-lionize-DOCTRINE1')]",
    "numSubnets": "[if(variables('provisionApp'), add(variables('numNics'), 2), add(variables('numNics'), 1))]",
    "vnetName": "[concat(variables('uniqueString'), '-vnet')]",
    "vnetAddressPrefix": "10.0",
    "createAutoscaleGroup": false,
    "externalLoadBalancerName": "None",
    "internalLoadBalancerName": "None",
    "internalLoadBalancerProbePort": "3456",
    "loadBalancerRulePorts": [],
    "mgmtNsgRulesArray": [
      {
        "destinationPortRanges": [
          "22",
          "[if(equals(variables('numNics'), 1), '8443', '443')]"
        ],
        "sourceAddressPrefix": "[variables('restrictedSrcAddressMgmt')]",
        "protocol": "Tcp"
      }
    ],
    "nsg1RulesArray": [
      {
        "destinationPortRanges": [
          "80",
          "443"
        ],
        "sourceAddressPrefix": "[variables('restrictedSrcAddressApp')]",
        "protocol": "Tcp"
      },
      {
        "destinationPortRanges": [
          "80",
          "443"
        ],
        "sourceAddressPrefix": "10.0.0.0/8",
        "protocol": "Tcp"
      }
    ],
    "nsg2RulesArray": [
      {
        "destinationPortRanges": [
          "80",
          "443"
        ],
        "sourceAddressPrefix": "[variables('restrictedSrcAddressApp')]",
        "protocol": "Tcp"
      },
      {
        "destinationPortRanges": [
          "80",
          "443"
        ],
        "sourceAddressPrefix": "10.0.0.0/8",
        "protocol": "Tcp"
      }
    ],
    "nsg0": "[if(equals(variables('numNics'), 1), union(variables('mgmtNsgRulesArray'), variables('nsg1RulesArray'), variables('nsg2RulesArray')), variables('mgmtNsgRulesArray'))]",
    "nsg1": "[if(greaterOrEquals(variables('numNics'), 2), variables('nsg1RulesArray'), createArray())]",
    "nsg2": "[if(greaterOrEquals(variables('numNics'), 3), variables('nsg2RulesArray'), createArray())]",
    "bastionInstanceName": "[variables('uniqueString')]",
    "bastionInstanceType": "Standard_D2s_v3",
    "provisionApp": "[not(empty(parameters('appContainerName')))]",
    "appInstanceName": "[variables('uniqueString')]",
    "appInstanceType": "Standard_D2s_v3",
    "cloudInitUrl": "",
    "mgmtSelfIp": "10.0.0.11",
    "nic1SelfIp": "10.0.1.11",
    "nic2SelfIp": "10.0.2.11",
    "nic1ServiceIPSubnetIndex": "[if(equals(variables('numNics'), 1), '0', '1')]",
    "nic1ServiceIP1": "[concat('10.0.', variables('nic1ServiceIPSubnetIndex'), '.101')]",
    "vmName": "[concat(variables('uniqueString'), '-bigip-vm')]",
    "PaloImage": "paloaltonetworks:byol:vmseries1:latest",
    "PaloInstanceType": "Standard_D3_v2",
    "mgmtSelfIpPalo": "10.0.0.12",
    "nic1SelfIpPalo": "10.0.2.12",
    "nic2SelfIpPalo": "10.0.3.12",
    "vmNamePalo" :"[concat(variables('uniqueString'), '-palo-vm')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "networkTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateBaseUrl'), variables('artifactLocation'), 'modules/network/network.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "numSubnets": {
            "value": "[variables('numSubnets')]"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "vnetAddressPrefix": {
            "value": "[variables('vnetAddressPrefix')]"
          },
          "createNatGateway": {
            "value": "[not(parameters('provisionPublicIp'))]"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "dagTemplate",
      "dependsOn": [
        "networkTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateBaseUrl'), variables('artifactLocation'), 'modules/dag/dag.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "uniqueString": {
            "value": "[variables('uniqueString')]"
          },
          "externalLoadBalancerName": {
            "value": "[variables('externalLoadBalancerName')]"
          },
          "internalLoadBalancerName": {
            "value": "[variables('internalLoadBalancerName')]"
          },
          "internalLoadBalancerProbePort": {
            "value": "[variables('internalLoadBalancerProbePort')]"
          },
          "internalSubnetId": {
            "value": ""
          },
          "loadBalancerRulePorts": {
            "value": "[variables('loadBalancerRulePorts')]"
          },
          "nsg0": {
            "value": "[variables('nsg0')]"
          },
          "nsg1": {
            "value": "[variables('nsg1')]"
          },
          "nsg2": {
            "value": "[variables('nsg2')]"
          },
          "numberPublicExternalIpAddresses": {
            "value": 2
          },
          "numberPublicMgmtIpAddresses": {
            "value": 2
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "condition": "[variables('provisionApp')]",
      "apiVersion": "2021-04-01",
      "name": "appTemplate",
      "dependsOn": [
        "networkTemplate",
        "dagTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateBaseUrl'), variables('artifactLocation'), 'modules/application/application.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "adminUsername": {
            "value": "[variables('adminUsername')]"
          },
          "adminPassword": {
            "value": "[variables('adminPassword')]"
          },
          "sshKey": {
            "value": "[parameters('sshKey')]"
          },
          "createAutoscaleGroup": {
            "value": "[variables('createAutoscaleGroup')]"
          },
          "instanceName": {
            "value": "[variables('appInstanceName')]"
          },
          "instanceType": {
            "value": "[variables('appInstanceType')]"
          },
          "subnetId": {
            "value": "[reference('networkTemplate').outputs.subnets.value[3]]"
          },
          "nsgId": {
            "value": "[reference('dagTemplate').outputs.nsg1Id.value]"
          },
          "appContainerName": {
            "value": "[parameters('appContainerName')]"
          },
          "cloudInitUrl": {
            "value": "[variables('cloudInitUrl')]"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "condition": "[parameters('2ndAPPServer')]",
      "apiVersion": "2021-04-01",
      "name": "appTemplate2",
      "dependsOn": [
        "networkTemplate",
        "dagTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateBaseUrl'), variables('artifactLocation'), 'modules/application/application.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "adminUsername": {
            "value": "[variables('adminUsername')]"
          },
          "adminPassword": {
            "value": "[variables('adminPassword')]"
          },
          "sshKey": {
            "value": "[parameters('sshKey')]"
          },
          "createAutoscaleGroup": {
            "value": "[variables('createAutoscaleGroup')]"
          },
          "instanceName": {
            "value": "[concat(variables('appInstanceName'), '02')]"
          },
          "instanceType": {
            "value": "[variables('appInstanceType')]"
          },
          "subnetId": {
            "value": "[reference('networkTemplate').outputs.subnets.value[3]]"
          },
          "nsgId": {
            "value": "[reference('dagTemplate').outputs.nsg1Id.value]"
          },
          "appContainerName": {
            "value": "[parameters('appContainerName')]"
          },
          "cloudInitUrl": {
            "value": "[variables('cloudInitUrl')]"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "condition": "[not(parameters('provisionPublicIp'))]",
      "name": "bastionTemplate",
      "dependsOn": [
        "bigIpTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateBaseUrl'), variables('artifactLocation'), 'modules/bastion/bastion.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "adminUsername": {
            "value": "[variables('adminUsername')]"
          },
          "createAutoscaleGroup": {
            "value": "[variables('createAutoscaleGroup')]"
          },
          "instanceName": {
            "value": "[variables('bastionInstanceName')]"
          },
          "instanceType": {
            "value": "[variables('bastionInstanceType')]"
          },
          "nsgId": {
            "value": "[reference('dagTemplate').outputs.nsg0Id.value]"
          },
          "publicIpId": {
            "value": "[reference('dagTemplate').outputs.mgmtIpIds.value[0]]"
          },
          "sshKey": {
            "value": "[parameters('sshKey')]"
          },
          "subnetId": {
            "value": "[reference('networkTemplate').outputs.subnets.value[0]]"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "PaloTemplate",
      "dependsOn": [
        "networkTemplate",
        "dagTemplate"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateBaseUrl'), variables('artifactLocation'), 'modules/paloalto/palo.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "adminUsername": {
            "value": "[variables('adminUsername')]"
          },
          "adminPassword": {
            "value": "[variables('adminPassword')]"
          },
          "image": {
            "value": "[variables('PaloImage')]"
          },
          "instanceType": {
            "value": "[variables('PaloInstanceType')]"
          },
          "mgmtSubnetId": {
            "value": "[reference('networkTemplate').outputs.subnets.value[0]]"
          },
          "mgmtNsgID": {
            "value": "[reference('dagTemplate').outputs.nsg0Id.value]"
          },
          "mgmtPublicIpId": {
            "value": "[if(parameters('provisionPublicIp'), reference('dagTemplate').outputs.mgmtIpIds.value[1], '')]"
          },
          "mgmtSelfIp": {
            "value": "[variables('mgmtSelfIpPalo')]"
          },
          "nic1SubnetId": {
            "value": "[reference('networkTemplate').outputs.subnets.value[1]]"
          },
          "nic1NsgId": {
            "value": "[reference('dagTemplate').outputs.nsg1Id.value]"
          },
          "nic1PrimaryPublicId": {
            "value": "[reference('dagTemplate').outputs.externalIpIds.value[0]]"
          },
          "nic1SelfIp": {
            "value": "[variables('nic1SelfIpPalo')]"
          },
          "nic1ServiceIPs": {
            "value": [
              {
                "publicIpId": "[reference('dagTemplate').outputs.externalIpIds.value[1]]",
                "privateIpAddress": "[variables('nic1ServiceIP1')]"
              }
            ]
          },
          "nic2SubnetId": {
            "value": "[reference('networkTemplate').outputs.subnets.value[3]]"
          },
          "nic2NsgId": {
            "value": "[reference('dagTemplate').outputs.nsg2Id.value]"
          },
          "nic2PrimaryPublicId": {
            "value": ""
          },
          "nic2SelfIp": {
            "value": "[variables('nic2SelfIpPalo')]"
          },
          "nic2ServiceIPs": {
            "value": []
          },
          "roleDefinitionId": {
            "value": ""
          },
          "bigIpRuntimeInitPackageUrl": {
            "value": "[parameters('PaloRuntimeInitPackageUrl')]"
          },
          "bigIpRuntimeInitConfig": {
            "value": "[parameters('PaloRuntimeInitConfig')]"
          },
          "sshKey": {
            "value": "[parameters('sshKey')]"
          },
          "tagValues": {
            "value": "[parameters('tagValues')]"
          },
          "uniqueString": {
            "value": "[concat(variables('uniqueString'),'-palo')]"
          },
          "useAvailabilityZones": {
            "value": "[variables('useAvailabilityZones')]"
          },
          "userAssignManagedIdentity": {
            "value": ""
          },
          "vmName": {
            "value": "[variables('vmNamePalo')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "virtualNetworkId": {
      "type": "string",
      "value": "[reference('networkTemplate').outputs.virtualNetwork.value]"
    },
    "vip1PrivateIp": {
      "type": "string",
      "value": "[variables('nic1ServiceIP1')]"
    },
    "vip1PublicIp": {
      "type": "string",
      "value": "[reference('dagTemplate').outputs.externalIps.value[1]]"
    },
    "vip1PublicIpDns": {
      "type": "string",
      "value": "[reference('dagTemplate').outputs.externalIpDns.value[1]]"
    },
    "vip1PrivateUrlHttp": {
      "type": "string",
      "value": "[concat('http://', variables('nic1ServiceIP1'), '/')]"
    },
    "vip1PublicUrlHttp": {
      "type": "string",
      "value": "[concat('http://', reference('dagTemplate').outputs.externalIps.value[1], '/')]"
    },
    "vip1PrivateUrlHttps": {
      "type": "string",
      "value": "[concat('https://', variables('nic1ServiceIP1'), '/')]"
    },
    "vip1PublicUrlHttps": {
      "type": "string",
      "value": "[concat('https://', reference('dagTemplate').outputs.externalIps.value[1], '/')]"
    },
    "appUsername": {
      "condition": "[variables('provisionApp')]",
      "type": "string",
      "value": "[variables('adminUsername')]"
    },
    "appPrivateIp": {
      "condition": "[variables('provisionApp')]",
      "type": "string",
      "value": "[reference('appTemplate').outputs.appIp.value]"
    },
    "appVmName": {
      "condition": "[variables('provisionApp')]",
      "type": "string",
      "value": "[reference('appTemplate').outputs.vmName.value]"
    }
  }
}
