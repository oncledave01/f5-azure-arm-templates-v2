{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.4.0.0",
  "parameters": {
    "adminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username applied to BIG-IP Virtual Machine."
      },
      "type": "string"
    },
    "adminPassword": {
      "defaultValue": "sports-lionize-DOCTRINE1",
      "metadata": {
        "description": "Admin password applied to BIG-IP Virtual Machine."
      },
      "type": "string"
    },
    "image": {
      "defaultValue": "fortinet:fortinet_fortigate-vm_v5:fortinet_fg-vm_payg_20190624:latest",
      "metadata": {
        "description": "2 formats accepted. URN of the image to use in Azure marketplace or id of custom image. Example URN value: f5-networks:f5-big-ip-byol:f5-big-all-2slot-byol:16.0.101000. You can find the URNs of F5 marketplace images in the README for this template or by running the command: az vm image list --output yaml --publisher f5-networks --all. See https://clouddocs.f5.com/cloud/public/v1/azure/Azure_download.html for information on creating custom BIG-IP image."
      },
      "type": "string"
    },
    "instanceType": {
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "Enter valid instance type."
      },
      "type": "string"
    },
    "mgmtSubnetId": {
      "metadata": {
        "description": "The resource ID of the management subnet."
      },
      "type": "string"
    },
    "mgmtNsgId": {
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID of a network security group to apply to the management network interface."
      },
      "type": "string"
    },
    "mgmtPublicIpId": {
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID of the public IP address to apply to the management network interface. Leave this parameter blank to create a management network interface without a public IP address."
      },
      "type": "string"
    },
    "mgmtSelfIp": {
      "defaultValue": "",
      "metadata": {
        "description": "The private IP address to apply to the primary IP configuration on the management network interface. The address must reside in the subnet provided in the mgmtSubnetId parameter."
      },
      "type": "string"
    },
    "nic1SubnetId": {
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID of the external subnet."
      },
      "type": "string"
    },
    "nic1NsgId": {
      "defaultValue": "",
      "metadata": {
        "description": "The optional resource ID of a network security group to apply to the external network interface."
      },
      "type": "string"
    },
    "nic1PrimaryPublicId": {
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID of the public IP address to apply to the primary IP configuration on the external network interface."
      },
      "type": "string"
    },
    "nic1SelfIp": {
      "defaultValue": "",
      "metadata": {
        "description": "The private IP address to apply to the primary IP configuration on the external network interface. The address must reside in the subnet provided in the nic1SubnetId parameter."
      },
      "type": "string"
    },
    "nic1ServiceIPs": {
      "defaultValue": [],
      "metadata": {
        "description": "An array of one or more public/private IP address pairs to apply to the secondary external IP configurations on the first non-management network interface. The private addresses must reside in the subnet provided in the same subnet as the network interface, if deploying with 2 or more network interfaces. When deploying a 1 NIC BIG-IP VE, these IP configurations will be created on the management network interface, and the addresses must reside in the subnet provided in the mgmtSubnetId parameter."
      },
      "type": "array"
    },
    "nic2SubnetId": {
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID of the internal subnet."
      },
      "type": "string"
    },
    "nic2NsgId": {
      "defaultValue": "",
      "metadata": {
        "description": "The optional resource ID of a network security group to apply to the internal network interface."
      },
      "type": "string"
    },
    "nic2PrimaryPublicId": {
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID of the public IP address to apply to the primary IP configuration on the internal network interface."
      },
      "type": "string"
    },
    "nic2SelfIp": {
      "defaultValue": "",
      "metadata": {
        "description": "The private IP address to apply to the primary IP configuration on the internal network interface. The address must reside in the subnet provided in the nic2SubnetId parameter."
      },
      "type": "string"
    },
    "nic2ServiceIPs": {
      "defaultValue": [],
      "metadata": {
        "description": "An array of one or more public/private IP address pairs to apply to the secondary external IP configurations on the second non-management network interface. The private addresses must reside in the subnet provided in the same subnet as the network interface, if deploying with 2 or more network interfaces. When deploying a 1 NIC BIG-IP VE, these IP configurations will be created on the management network interface, and the addresses must reside in the subnet provided in the mgmtSubnetId parameter."
      },
      "type": "array"
    },
    "roleDefinitionId": {
      "defaultValue": "",
      "metadata": {
        "description": "Enter a role definition id you wish to add to system managed identity. Leave default if system managed identity is not used."
      },
      "type": "string"
    },
    "tagValues": {
      "defaultValue": {
        "application": "APP",
        "cost": "COST",
        "environment": "ENV",
        "group": "GROUP",
        "owner": "OWNER"
      },
      "metadata": {
        "description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
      },
      "type": "object"
    },
    "uniqueString": {
      "metadata": {
        "description": "REQUIRED - A prefix that will be used to name template resources. Because some resources require globally unique names, we recommend using a unique value."
      },
      "type": "string"
    },
    "userAssignManagedIdentity": {
      "defaultValue": "",
      "metadata": {
        "description": "Enter user assigned management identity ID to be associated to vmss. Leave default if not used."
      },
      "type": "string"
    },
    "vmName": {
      "defaultValue": "forti-vm",
      "metadata": {
        "description": "Name to use for Virtual Machine."
      },
      "type": "string"
    },
    "workspaceId": {
      "metadata": {
        "description": "Log Analytics workspace ID used by Telemetry Streaming for sending logs"
      },
      "type": "string",
      "defaultValue": "WORKSPACE_ID"
    }
  },
  "variables": {
    "useCustomImage": "[contains(tolower(parameters('image')), 'microsoft.compute')]",
    "emptyArray": [],
    "identity": "[if(empty(parameters('userAssignManagedIdentity')), variables('identitySys'), variables('identitySysUser'))]",
    "identitySys": {
      "type": "SystemAssigned"
    },
    "identitySysUser": {
      "type": "[if(empty(parameters('roleDefinitionId')), 'UserAssigned', 'SystemAssigned, UserAssigned')]",
      "userAssignedIdentities": {
        "[parameters('userAssignManagedIdentity')]": {}
      }
    },
    "image": "[if(variables('useCustomImage'), parameters('image'), split(parameters('image'), ':'))]",
    "imagePlan": {
      "name": "[variables('skuToUse')]",
      "product": "[variables('offerToUse')]",
      "publisher": "fortinet"
    },
    "imageReference": {
      "offer": "[variables('offerToUse')]",
      "publisher": "fortinet",
      "sku": "[variables('skuToUse')]",
      "version": "[variables('versionToUse')]"
    },
    "copy": [
      {
        "count": "[length(parameters('nic1ServiceIPs'))]",
        "input": {
          "name": "[concat(parameters('vmName'), '-ipconfig-nic1-secondary', copyIndex('constructNic1ServiceIpConfigs'))]",
          "properties": {
            "publicIpAddress": "[if(and(contains(parameters('nic1ServiceIPs')[copyIndex('constructNic1ServiceIpConfigs')], 'publicIpId'), not(empty(parameters('nic1ServiceIPs')[copyIndex('constructNic1ServiceIpConfigs')].publicIpId))), json(concat('{\"id\": \"', parameters('nic1ServiceIPs')[copyIndex('constructNic1ServiceIpConfigs')].publicIpId, '\"}')), json('null'))]",
            "primary": false,
            "privateIpAddress": "[parameters('nic1ServiceIPs')[copyIndex('constructNic1ServiceIpConfigs')].privateIpAddress]",
            "privateIpAllocationMethod": "Static",
            "subnet": {
              "id": "[if(equals(variables('networkInterfaceCount'), 1), parameters('mgmtSubnetId'), parameters('nic1SubnetId'))]"
            }
          }
        },
        "name": "constructNic1ServiceIpConfigs"
      },
      {
        "count": "[length(parameters('nic2ServiceIPs'))]",
        "input": {
          "name": "[concat(parameters('vmName'), '-ipconfig-nic2-secondary', copyIndex('constructNic2ServiceIpConfigs'))]",
          "properties": {
            "publicIpAddress": "[if(and(contains(parameters('nic2ServiceIPs')[copyIndex('constructNic2ServiceIpConfigs')], 'publicIpId'), not(empty(parameters('nic2ServiceIPs')[copyIndex('constructNic2ServiceIpConfigs')].publicIpId))), json(concat('{\"id\": \"', parameters('nic2ServiceIPs')[copyIndex('constructNic2ServiceIpConfigs')].publicIpId, '\"}')), json('null'))]",
            "primary": false,
            "privateIpAddress": "[parameters('nic2ServiceIPs')[copyIndex('constructNic2ServiceIpConfigs')].privateIpAddress]",
            "privateIpAllocationMethod": "Static",
            "subnet": {
              "id": "[if(equals(variables('networkInterfaceCount'), 1), parameters('mgmtSubnetId'), parameters('nic2SubnetId'))]"
            }
          }
        },
        "name": "constructNic2ServiceIpConfigs"
      }
    ],
    "ipConfigurationMgmtPrimary": [
      {
        "name": "[concat(parameters('vmName'), '-ipconfig-primary0')]",
        "properties": {
          "publicIpAddress": "[if(empty(parameters('mgmtPublicIpId')), json('null'), json(concat('{\"id\": \"', parameters('mgmtPublicIpId'), '\"}')))]",
          "primary": true,
          "privateIpAddress": "[if(empty(parameters('mgmtSelfIP')), json('null'), parameters('mgmtSelfIP'))]",
          "privateIpAllocationMethod": "[if(empty(parameters('mgmtSelfIP')), 'Dynamic', 'Static')]",
          "subnet": {
            "id": "[parameters('mgmtSubnetId')]"
          }
        }
      }
    ],
    "ipConfigurationNic1Primary": [
      {
        "name": "[concat(parameters('vmName'), '-ipconfig-primary0')]",
        "properties": {
          "publicIpAddress": "[if(empty(parameters('nic1PrimaryPublicId')), json('null'), json(concat('{\"id\": \"', parameters('nic1PrimaryPublicId'), '\"}')))]",
          "primary": true,
          "privateIpAddress": "[if(empty(parameters('nic1SelfIp')), json('null'), parameters('nic1SelfIp'))]",
          "privateIpAllocationMethod": "[if(empty(parameters('nic1SelfIp')), 'Dynamic', 'Static')]",
          "subnet": {
            "id": "[parameters('nic1SubnetId')]"
          }
        }
      }
    ],
    "ipConfigurationNic2Primary": [
      {
        "name": "[concat(parameters('vmName'), '-ipconfig-primary0')]",
        "properties": {
          "publicIpAddress": "[if(empty(parameters('nic2PrimaryPublicId')), json('null'), json(concat('{\"id\": \"', parameters('nic2PrimaryPublicId'), '\"}')))]",
          "primary": true,
          "privateIpAddress": "[if(empty(parameters('nic2SelfIp')), json('null'), parameters('nic2SelfIp'))]",
          "privateIpAllocationMethod": "[if(empty(parameters('nic2SelfIp')), 'Dynamic', 'Static')]",
          "subnet": {
            "id": "[parameters('nic2SubnetId')]"
          }
        }
      }
    ],
    "ipConfigurationsMgmt": "[if(equals(variables('networkInterfaceCount'), 1), union(variables('ipConfigurationMgmtPrimary'), variables('constructNic1ServiceIpConfigs'), variables('constructNic2ServiceIpConfigs')), variables('ipConfigurationMgmtPrimary'))]",
    "ipConfigurationsNic1": "[union(variables('ipConfigurationNic1Primary'), variables('constructNic1ServiceIpConfigs'))]",
    "ipConfigurationsNic2": "[union(variables('ipConfigurationNic2Primary'), variables('constructNic2ServiceIpConfigs'))]",
    "networkInterfaceCount": "[add(add(if(empty(parameters('mgmtSubnetId')), 0, add(0, 1)), if(empty(parameters('nic1SubnetId')), 0, add(0, 1))), if(empty(parameters('nic2SubnetId')), 0, add(0, 1)))]",
    "networkInterfaceName0": "[concat(parameters('uniqueString'), '-nic0')]",
    "networkInterfaceName1": "[concat(parameters('uniqueString'), '-nic1')]",
    "networkInterfaceName2": "[concat(parameters('uniqueString'), '-nic2')]",
    "networkInterfaces": "[union(createArray(variables('networkInterfacesArray')[0]), if(empty(parameters('nic1SubnetId')), variables('emptyArray'), createArray(variables('networkInterfacesArray')[1])), if(empty(parameters('nic2SubnetId')), variables('emptyArray'), createArray(variables('networkInterfacesArray')[2])))]",
    "networkInterfacesArray": [
      {
        "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName0'))]",
        "properties": {
          "primary": true
        }
      },
      {
        "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName1'))]",
        "properties": {
          "primary": false
        }
      },
      {
        "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName2'))]",
        "properties": {
          "primary": false
        }
      }
    ],
    "offerToUse": "fortinet_fortigate-vm_v5",
    "skuToUse": "fortinet_fg-vm",
    "versionToUse": "[if(variables('useCustomImage'), json('null'), variables('image')[3])]",
    "runtimeInitTag": {
      "workspaceId": "[parameters('workspaceId')]",
      "uniqueString": "[parameters('uniqueString')]"
    },
    "fgaCustomData": "[concat('config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\nedit 1\nset gateway ', variables('sn1GatewayIP'), '\nset device port1\nnext\nedit 2\nset dst ', parameters('vnetAddressPrefix'), '\nset gateway ', variables('sn2GatewayIP'), '\nset device port2\nnext\nend\nconfig system interface\nedit port1\nset mode static\nset ip ',  variables('sn1IPfga'), '/', variables('sn1CIDRmask'), '\nset description external\nset allowaccess ping ssh https\nnext\nedit port2\nset mode static\nset ip ', variables('sn2IPfga'), '/', variables('sn2CIDRmask'), '\nset description internal\nset allowaccess ping ssh https\nnext\nend\n')]",
  },
  "resources": [
    {
      "apiVersion": "2020-06-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('networkInterfaceName0')]",
      "properties": {
        "ipConfigurations": "[variables('ipConfigurationsMgmt')]",
        "networkSecurityGroup": {
          "id": "[parameters('mgmtNsgId')]"
        }
      },
      "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2020-06-01",
      "condition": "[not(empty(parameters('nic1SubnetId')))]",
      "location": "[resourceGroup().location]",
      "name": "[variables('networkInterfaceName1')]",
      "properties": {
        "ipConfigurations": "[variables('ipConfigurationsNic1')]",
        "networkSecurityGroup": {
          "id": "[parameters('nic1NsgId')]"
        }
      },
      "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2020-06-01",
      "condition": "[not(empty(parameters('nic2SubnetId')))]",
      "location": "[resourceGroup().location]",
      "name": "[variables('networkInterfaceName2')]",
      "properties": {
        "ipConfigurations": "[variables('ipConfigurationsNic2')]",
        "networkSecurityGroup": {
          "id": "[parameters('nic2NsgId')]"
        }
      },
      "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2019-12-01",
      "dependsOn": [
        "[variables('networkInterfaceName0')]",
        "[variables('networkInterfaceName1')]",
        "[variables('networkInterfaceName2')]"
      ],
      "location": "[resourceGroup().location]",
      "identity": "[if(and(empty(parameters('userAssignManagedIdentity')), empty(parameters('roleDefinitionId'))), json('null'), variables('identity'))]",
      "name": "[parameters('vmName')]",
      "plan": "[if(variables('useCustomImage'), json('null'), variables('imagePlan'))]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('instanceType')]"
        },
        "networkProfile": {
          "networkInterfaces": "[variables('networkInterfaces')]"
        },
        "osProfile": {
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "computerName": "[parameters('vmName')]",
					"customData": "[variables('fgaCustomData')]"
        },
				"storageProfile": {
					"imageReference": {
            "offer": "[variables('offerToUse')]",
            "publisher": "fortinet",
            "sku": "[variables('skuToUse')]",
            "version": "[variables('versionToUse')]"
          },
					"osDisk": {
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"diskSizeGB": 30,
							"lun": 0,
							"createOption": "Empty"
						}
					]
				}
      },
      "tags": "[union(variables('runtimeInitTag'), parameters('tagValues'))]",
      "type": "Microsoft.Compute/virtualMachines"
    }
  ],
  "outputs": {
    "selfPrivateIp0": {
      "condition": "[not(empty(parameters('mgmtSubnetId')))]",
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName0')),'2020-06-01').ipConfigurations[0].properties.privateIPAddress]"
    },
    "selfPrivateIp1": {
      "condition": "[not(empty(parameters('nic1SubnetId')))]",
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName1')),'2020-06-01').ipConfigurations[0].properties.privateIPAddress]"
    },
    "selfPrivateIp2": {
      "condition": "[not(empty(parameters('nic2SubnetId')))]",
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName2')),'2020-06-01').ipConfigurations[0].properties.privateIPAddress]"
    },
    "vmId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')),'2019-12-01').vmId]"
    }
  }
}
