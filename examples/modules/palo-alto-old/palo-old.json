{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dnsNameForPublicIP": {
            "type": "string",
            "metadata": {
                "description": "Globally unique DNS name to access management interface of VM-Series firewall"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of VM-Series VM in the Azure portal"
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Username for VM-Series administrator"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "Pal0Alt0!29",
            "metadata": {
                "description": "Password for VM-Series administrator"
            }
        },
        "authenticationType": {
            "type": "string",
            "metadata": {
                "descritpion": "Type of authentication "
            },
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "defaultValue": "password"
        },
        "sshKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH rsa public key file as a string."
            }
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D3",
                "Standard_D4"
            ],
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
        "srcIPInboundNSG": {
            "type": "string",
            "metadata": {
                "description": "Your source public IP address. Added to the inbound DefaultNSG on eth0 (MGMT)"
            }
        },
        "baseUrl": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": ""
            },
            "defaultValue": "https://raw.githubusercontent.com/saurabhtrekker/UI1/master"
        },
        "uniqueString": {
            "metadata": {
                "description": "REQUIRED - A prefix that will be used to name template resources. Because some resources require globally unique names, we recommend using a unique value."
            },
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network that the consumer wants to use"
            },
            "defaultValue": "panVnet"
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/16",
            "metadata": {
                "description": "Virtual network address CIDR"
            }
        },
        "subnet0Name": {
            "type": "string",
            "defaultValue": "Mgmt",
            "metadata": {
                "description": "Subnet for the Mgmt"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Untrust",
            "metadata": {
                "description": "Subnet for the Untrust"
            }
        },
        "subnet2Name": {
            "type": "string",
            "defaultValue": "Trust",
            "metadata": {
                "description": "Subnet for the Trust"
            }
        },
        "subnet0Prefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/24",
            "metadata": {
                "description": "Mgmt subnet CIDR"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "192.168.1.0/24",
            "metadata": {
                "description": "Untrust subnet CIDR"
            }
        },
        "subnet2Prefix": {
            "type": "string",
            "defaultValue": "192.168.2.0/24",
            "metadata": {
                "description": "Trust subnet CIDR"
            }
        },
        "subnet0StartAddress": {
            "type": "string",
            "defaultValue": "192.168.0.4",
            "metadata": {
                "description": "Mgmt subnet start address"
            }
        },
        "subnet1StartAddress": {
            "type": "string",
            "defaultValue": "192.168.1.4",
            "metadata": {
                "description": "Untrust subnet start address"
            }
        },
        "subnet2StartAddress": {
            "type": "string",
            "defaultValue": "192.168.2.4",
            "metadata": {
                "description": "Trust subnet start address"
            }
        }
    },
    "variables": {
        "apiVersion": "2015-06-15",
        "imagePublisher": "paloaltonetworks",
        "imageSku": "byol",
        "imageOffer": "vmseries1",
        "fwpublicIPName": "[concat(parameters('vmName'), '-fwMgmtPublicIP')]",
        "nicName": "[concat(parameters('vmName'), '-eth')]",
        "FWPrivateIPAddressUntrust": "[parameters('subnet1StartAddress')]",
        "FWPrivateIPAddressTrust": "[parameters('subnet2StartAddress')]",
        "publicIPAddressType": "Dynamic",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "nsgname-mgmt": "[concat(parameters('vmName'), '-DefaultNSG')]",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
        "storageAccountSetupURL": "[concat(parameters('baseUrl'),'/storageAccount-new.json')]",
        "diagnosticsStorageAccountName": "[concat(uniqueString(parameters('uniqueString'), resourceGroup().id, deployment().name), 'data001')]",
        "storageAccountType": "Standard_LRS"
        "vmTemplateUrl": "[concat(parameters('baseUrl'), '/virtual-machine-', parameters('authenticationType'),'.json')]"
    },
    "resources": [
        {
            "name": "storageAcountSetup1",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[resourceGroup().location]"
                    },
                    "storageAccountType": {
                        "value": "[variables('storageAccountType')]"
                    },
                    "newStorageAccount": {
                        "value": "[variables('diagnosticsStorageAccountName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('fwpublicIPName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('vmName'), '-DefaultNSG')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Outside-From-IP",
                        "properties": {
                            "description": "Rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-Intra",
                        "properties": {
                            "description": "Allow intra network traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[concat(parameters('virtualNetworkAddressPrefix'))]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Default-Deny",
                        "properties": {
                            "description": "Default-Deny if we don't match Allow rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '0')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('fwpublicIPName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '0')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '0')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fwpublicIPName'))]"
                            },
                            "subnet": {
                                "id": "[variables(concat('subnet','0','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '1')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '1')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '1')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressUntrust')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','1','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '2')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '2')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '2')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressTrust')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','2','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/virtualMachines",
          "name": "[parameters('vmName')]",
          "location": "[resourceGroup().location]",
          "plan": {
             "name": "[variables('imageSku')]",
             "product": "[variables('imageOffer')]",
             "publisher": "[variables('imagePublisher')]"
          },
          "properties": {
              "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
              },
              "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]"
              },
              "storageProfile": {
                  "imageReference": {
                      "publisher": "[variables('imagePublisher')]",
                      "offer": "[variables('imageOffer')]",
                      "sku": "[variables('imageSku')]",
                      "version": "latest"
                  },
                  "osDisk": {
                      "name": "osdisk",
                      "vhd": {
                          "uri": "[concat('http://', variables('diagnosticsStorageAccountName'), '.blob.core.windows.net/vhds/', parameters('vmName'), '-', variables('imageOffer'), '-', variables('imageSku'), '.vhd')]"
                      },
                      "caching": "ReadWrite",
                      "createOption": "FromImage"
                  }
              },
              "networkProfile": {
                  "networkInterfaces": [{
                      "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicName'),'0'))]",
                      "properties": {
                          "primary": true
                      }
                  }, {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicName'),'1'))]",
                      "properties": {
                          "primary": false
                      }
                  }, {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicName'),'2'))]",
                      "properties": {
                          "primary": false
                      }
                  }]
              }
          }
      }
    ]
}